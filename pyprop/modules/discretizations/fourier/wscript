from Configure import conftest
from TaskGen import feature, extension, before, after
import Options

sources = [
	"src/combinedpropagator/cartesianfouriertransform.cpp",
	"src/combinedpropagator/fouriertransform.cpp",
	"src/combinedpropagator/radialtransform.cpp",
	"src/representation/cartesianrepresentation.cpp",
]

pyste_module = "libfourier"
pyste_sources = [
	"src/pyste/cartesianabsorber.pyste",
	"src/pyste/cartesianfouriertransform.pyste",
	"src/pyste/cartesiankineticpotential.pyste",
	"src/pyste/cartesianrange.pyste",
]

def set_options(opt):
	pass

def configure(conf):
	print("-----> Configuring fourier")


def build(bld):
	if Options.options.EnableModuleFourier:
		tskgen = bld.new_task_gen(
			features="pyprop pyste compile link",
			source=sources,
			local_libraries="core/libcore",
			pyste_files=pyste_sources,
			pyste_module=pyste_module,
			pyste_force=True,
			pyprop_path="../../../../",
		)

