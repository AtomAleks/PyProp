[Representation]
rank = 1
type = core.CombinedRepresentation_1
representation0 = "FiniteDifferenceRepresentation"

[BSplineRepresentation]
type = bspline.BSplineRepresentation
init_function = bspline.InitBSpline
xmin = -50.0
xmax = 50.0
xsize = 40
gamma = 2.0
joinpoint = 0
bpstype = 'linear'
continuity = 'zero'
xpartition = 5
order = 8
quad_order_additional = 0
projection_algorithm = 0
lapack_algorithm = 1

[FiniteDifferenceRepresentation]
type = core.CustomGridRepresentation
rank = 1
function = customgrid.GetGridLinear
xmin = -400
xmax = 100
count = 2500
include_left_boundary = True
include_right_boundary = True

[InitialCondition]
type = InitialConditionType.Function
function = lambda conf, x: conf.exp(-(x[0]+25)**2/40.0) * conf.exp(1j * 1.0 * x[0])
exp = exp

[Propagation]
potential_evaluation = []
#grid_potential_list = ["KineticEnergy"]#, "CoulombPotential", "Absorber"]
grid_potential_list = ["KineticEnergy", "Absorber"]
propagator = pamp.PamPropagator
base_propagator = basispropagator.BasisPropagator
timestep = 0.01
duration = 250
renormalization = False
krylov_basis_size = 15
krylov_tolerance = 1e-13
#krylov_norm = 1e6

[KineticEnergy]
classname = "KineticEnergyPotential"
geometry0 = "banded-7"
differentiation0 = 2
mass = 1

[Arpack]
krylov_basis_size = 20
krylov_tolerance = 0
krylov_eigenvalue_count = 5
krylov_max_iteration_count = 500
krylov_use_random_start = True
counter_on = True

[CoulombPotential]
classname = "RegularizedCoulombPotential"
geometry0 = "diagonal"
charge = -1.0
soft_param = sqrt(0.5)

[Absorber]
classname = "ManolopoulosAbsorber"
geometry0 = "diagonal"
energy_cutoff = 0.05
grid_max = 80.2
delta = 0.06
